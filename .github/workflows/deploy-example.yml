name: Build and deploy example

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}-build-deploy-example"
  cancel-in-progress: true

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  env:
    name: Generate environment variables
    runs-on: ubuntu-latest
    outputs:
      app_name: "calendar-component"
      environment: "example"
      image: "${{ github.repository }}"
      registry: "ghcr.io"
      public_url: "${{ vars.PUBLIC_URL }}"
      service_id: "${{ vars.SERVICE_ID }}"
    steps:
      - run: echo Building and deploying example page.

  build:
    name: Build and push docker image
    needs: [env]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    environment:
      name: "${{ needs.env.outputs.environment }}"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: "${{ needs.env.outputs.registry }}"
          username: "${{ github.actor }}"
          password: "${{ secrets.GITHUB_TOKEN }}"

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: "${{ needs.env.outputs.registry }}/${{ needs.env.outputs.image }}"
          tags: |
            type=raw,value={{sha}}
            type=ref,event=branch
          #   type=ref,event=pr
          #   type=semver,pattern={{version}}
          #   type=semver,pattern={{major}}.{{minor}}
          #   type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: "${{ steps.meta.outputs.tags }}"
          labels: "${{ steps.meta.outputs.labels }}"
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy docker image
    needs: [env, build]
    uses: acdh-oeaw/gl-autodevops-minimal-port/.github/workflows/deploy.yml@main
    secrets: inherit
    with:
      environment: "${{ needs.env.outputs.environment }}"
      DOCKER_TAG: "${{ needs.env.outputs.registry }}/${{ needs.env.outputs.image }}"
      APP_NAME: "${{ needs.env.outputs.app_name }}"
      APP_ROOT: "/"
      SERVICE_ID: "${{ needs.env.outputs.service_id }}"
      PUBLIC_URL: "${{ needs.env.outputs.public_url }}"
      default_port: "3000"
